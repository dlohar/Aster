import daisy.lang._
import Real._

object VisionBasedLateralControl {

  def next_x1(x1: Real, x2: Real, x3: Real, x4: Real, u: Real): Real = {
    require(-0.0637 <= x1 && x1 <= 0.0383 && -0.0511 <= x2 && x2 <= 0.0309 && 0 <= x3 && x3 <= 0.0533 && -0.0017 <= x4 && x4 <= 0.0032 && -0.0426 <= u && u <= 0.0256)
    val res = (0.9037000000) * x1 + (-0.1167000000) * x2 + (0.0000000000) * x3 + (0.0000000000) * x4 + (0.6875000000) * u
    res
  }

  def next_x2(x1: Real, x2: Real, x3: Real, x4: Real, u: Real): Real = {
    require(-0.0637 <= x1 && x1 <= 0.0383 && -0.0511 <= x2 && x2 <= 0.0309 && 0 <= x3 && x3 <= 0.0533 && -0.0017 <= x4 && x4 <= 0.0032 && -0.0426 <= u && u <= 0.0256)
    val res = (0.0098000000) * x1 + (0.8928000000) * x2 + (0.0000000000) * x3 + (0.0000000000) * x4 + (0.4779000000) * u
    res
  }

  def next_x3(x1: Real, x2: Real, x3: Real, x4: Real, u: Real): Real = {
    require(-0.0637 <= x1 && x1 <= 0.0383 && -0.0511 <= x2 && x2 <= 0.0309 && 0 <= x3 && x3 <= 0.0533 && -0.0017 <= x4 && x4 <= 0.0032 && -0.0426 <= u && u <= 0.0256)
    val res = (-0.0103000000) * x1 + (-0.1419000000) * x2 + (1.0000000000) * x3 + (0.1500000000) * x4 + (-0.0401000000) * u
    res
  }

  def next_x4(x1: Real, x2: Real, x3: Real, x4: Real, u: Real): Real = {
    require(-0.0637 <= x1 && x1 <= 0.0383 && -0.0511 <= x2 && x2 <= 0.0309 && 0 <= x3 && x3 <= 0.0533 && -0.0017 <= x4 && x4 <= 0.0032 && -0.0426 <= u && u <= 0.0256)
    val res = (-0.0000510490) * x1 + (-0.0095000000) * x2 + (0.0000000000) * x3 + (1.0000000000) * x4 + (-0.0024000000) * u
    res
  }

}