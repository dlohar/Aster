import daisy.lang._
import Real._

object SuspensionControl {

  def next_x1(x1: Real, x2: Real, x3: Real, x4: Real, u: Real): Real = {
    require(0.0099 <= x1 && x1 <= 0.5 && -8.6337 <= x2 && x2 <= 2.7751 && -2.2218 <= x3 && x3 <= 0.5862 && -46.8586 <= x4 && x4 <= 114.0076 && -6.7183 <= u && u <= 2.8655)
    val res = (0.9988000000) * x1 + (0.0194000000) * x2 + (0.0009230000) * x3 + (0.0005487800) * x4 + (0.0113000000) * u
    res
  }

  def next_x2(x1: Real, x2: Real, x3: Real, x4: Real, u: Real): Real = {
    require(0.0099 <= x1 && x1 <= 0.5 && -8.6337 <= x2 && x2 <= 2.7751 && -2.2218 <= x3 && x3 <= 0.5862 && -46.8586 <= x4 && x4 <= 114.0076 && -6.7183 <= u && u <= 2.8655)
    val res = (-0.1111000000) * x1 + (0.9432000000) * x2 + (0.0671000000) * x3 + (0.0455000000) * x4 + (0.9534000000) * u
    res
  }

  def next_x3(x1: Real, x2: Real, x3: Real, x4: Real, u: Real): Real = {
    require(0.0099 <= x1 && x1 <= 0.5 && -8.6337 <= x2 && x2 <= 2.7751 && -2.2218 <= x3 && x3 <= 0.5862 && -46.8586 <= x4 && x4 <= 114.0076 && -6.7183 <= u && u <= 2.8655)
    val res = (0.0108000000) * x1 + (0.0055000000) * x2 + (0.9780000000) * x3 + (0.0116000000) * x4 + (0.2441000000) * u
    res
  }

  def next_x4(x1: Real, x2: Real, x3: Real, x4: Real, u: Real): Real = {
    require(0.0099 <= x1 && x1 <= 0.5 && -8.6337 <= x2 && x2 <= 2.7751 && -2.2218 <= x3 && x3 <= 0.5862 && -46.8586 <= x4 && x4 <= 114.0076 && -6.7183 <= u && u <= 2.8655)
    val res = (0.8878000000) * x1 + (0.4547000000) * x2 + (-1.8196000000) * x3 + (0.3012000000) * x4 + (-13.0444000000) * u
    res
  }

}