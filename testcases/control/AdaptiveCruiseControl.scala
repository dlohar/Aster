import daisy.lang._
import Real._

object AdaptiveCruiseControl {

  def next_x1(x1: Real, x2: Real, x3: Real, u: Real): Real = {
    require(0.8433 <= x1 && x1 <= 7.1314 && -6.7311 <= x2 && x2 <= 6.2125 && -65.0434 <= x3 && x3 <= 79.2554 && -303.886 <= u && u <= 326.0324)
    val res = (1.0000000000) * x1 + (0.0200000000) * x2 + (-0.0148000000) * x3 + (-0.0005806800) * u
    res
  }

  def next_x2(x1: Real, x2: Real, x3: Real, u: Real): Real = {
    require(0.8433 <= x1 && x1 <= 7.1314 && -6.7311 <= x2 && x2 <= 6.2125 && -65.0434 <= x3 && x3 <= 79.2554 && -303.886 <= u && u <= 326.0324)
    val res = (0.0000000000) * x1 + (1.0000000000) * x2 + (-0.0208000000) * x3 + (-0.0008217700) * u
    res
  }

  def next_x3(x1: Real, x2: Real, x3: Real, u: Real): Real = {
    require(0.8433 <= x1 && x1 <= 7.1314 && -6.7311 <= x2 && x2 <= 6.2125 && -65.0434 <= x3 && x3 <= 79.2554 && -303.886 <= u && u <= 326.0324)
    val res = (0.0000000000) * x1 + (0.0000000000) * x2 + (1.0833000000) * x3 + (0.0833000000) * u
    res
  }

}