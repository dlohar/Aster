import daisy.lang._
import Vector._

object MpcNN {

  def nn1(x: Vector): Vector = {
    require(lowerBounds(x, List(-0.05, -0.05, -0.05, 0.0, 0.0, 0.0)) &&
      upperBounds(x, List(0.05, 0.05, 0.05, 11.81, 11.81, 11.81)))

    val weights1 = Matrix(List(
      List(-4.96721715e-01, 7.91939934e-01, -1.87034262e-01,
        3.94737751e-01, -3.13943780e-01, -7.01106402e-01),
      List(4.01452073e-01, -1.69097000e-02,  2.95541266e-01,
        -4.62699752e-01,  5.59488591e-01,  2.83500871e-02),
      List(1.02783088e+01, -1.45807099e+00,  9.29761338e+00,
        5.96961487e+00, -7.89943114e-01,  6.12023628e+00),
      List(-5.78133195e+00,  8.11559633e+00, -9.04523190e+00,
        -5.72488945e+00,  5.45969841e+00, -6.17549642e+00),
      List(-9.59797129e-02,  3.07012675e-01, -4.71345532e-01,
        1.80657111e+00, -2.65651932e+00,  2.00385260e+00),
      List(6.75955924e-01, -2.04018721e-01, -1.82725550e-01,
        -2.41570164e-02,  4.33541628e-01, -1.42135332e-01),
      List(3.97174822e+00,  8.59817629e+00,  1.05139056e+01,
        2.41578265e+00,  6.73660192e+00,  6.43590368e+00),
      List(9.64482187e-01, -6.27409533e-01, -1.75789058e-01,
        8.51729745e-01,  2.91106762e-01, -6.07945626e-01),
      List(-8.44570859e-01,  9.29977848e-01,  9.50444685e-01,
        -6.31231115e-01, -4.93207931e-01, -3.15118718e-01),
      List(-3.55740973e-01, -4.11568624e-01, -3.59361348e-01,
        1.70696918e-01,  3.84720243e-01, -4.76239192e-01),
      List(-8.60383942e+00, -1.55228977e+01,  8.14148783e+00,
        -7.34352670e+00, -8.65548310e+00,  4.52085750e+00),
      List(-3.57736052e+00,  3.28020469e+00, -1.41315454e+00,
        -2.65233232e+00,  4.11605437e+00, -2.46629944e+00),
      List(1.47517896e+01, -8.14677451e+00, -1.17000326e+01,
        8.73789583e+00, -3.48815839e+00, -8.07603216e+00),
      List(7.24017314e-01,  4.27516934e-01,  7.15620075e-01,
        -4.53536634e-01, -2.74815254e-01,  2.00009434e-01),
      List(-1.22319011e-01,  4.48475904e+00, -3.32264993e+00,
        -1.75934346e+00,  1.51753284e+00, -9.13727542e-01),
      List(-4.88509612e-01,  5.89156702e-01, -4.95933840e-01,
        3.64907420e-01,  2.63293254e-01,  1.92265884e-02),
      List(6.02044125e-01,  3.14219277e-03,  5.88674311e-01,
        -5.53055629e-01,  4.12352604e-01, -3.92536577e-01),
      List(-4.42759911e-02,  5.83642079e-01, -1.34122983e-01,
        -9.72464975e-01,  2.27177389e-01,  7.19301907e-01),
      List(-7.31322783e-01,  3.91528429e-01, -2.84977665e-01,
        -1.66552075e-01,  2.96625512e-01,  3.43196762e-01),
      List(8.55697986e-01,  5.55696954e-01, -3.39446127e-01,
        8.76963784e-01, -6.60118572e-01,  2.66948025e-01)))

    val weights2 = Matrix(List(
      List(-7.84982248e-01, -6.04219198e-02,  5.96313752e+00,
        -5.75995182e+00,  1.47999394e+00,  7.54068779e-01,
        -2.46005519e+00,  7.20169895e-02, -1.56684228e-01,
        -8.70176829e-01,  2.10719228e+00, -2.42201890e+00,
        1.42728362e+01,  1.69094532e-01,  2.77495195e+00,
        -9.49047528e-01, -6.18321273e-01, -2.59388612e-01,
        9.48425256e-01, -1.42382531e-02),
      List(2.47340822e-01,  9.58966708e-01,  2.61333189e+00,
        8.80521073e-01, -1.00221986e+00, -4.92836501e-01,
        5.58494636e+00, -9.35669609e-01,  7.27658291e-01,
        7.40849714e-01,  1.27707948e+00,  1.58172853e+00,
        -7.71191430e+00,  3.73046531e-01,  6.01581501e-01,
        4.58795397e-01,  5.87607303e-01, -7.53162280e-01,
        -7.54455741e-01, -4.91123795e-01),
      List(-9.04014872e-01, -2.71243859e-01, -8.61069190e+00,
        1.09912282e+01, -2.07198554e+00, -4.52380592e-01,
        -1.75215589e+00, -7.36171879e-01, -8.36752035e-01,
        4.02760589e-01, -4.90416022e+00,  4.91259470e+00,
        -3.43230309e+00, -8.60535317e-01,  3.86141687e-01,
        4.49833494e-01,  3.16854451e-01,  2.69037433e-01,
        -6.24860215e-01,  7.69933038e-01),
      List(-4.30752238e-01,  5.48820267e-01,  4.16921740e-01,
        -7.81234172e-01,  3.03578552e-01, -3.43277220e-01,
        -3.76594165e-01, -6.13167202e-01, -5.37760942e-02,
        2.09853746e-01,  1.96929386e-01, -8.81645586e-01,
        -9.27863371e-01,  9.42166639e-01, -3.58870692e-01,
        -3.39216507e-01, -3.11321609e-01, -1.72160309e-01,
        7.78884951e-01, -2.33473086e-01),
      List(-8.77926638e-01,  1.05535193e-01,  1.28659758e+00,
        1.47781945e+00, -1.69978459e-01,  9.51285410e-02,
        1.82341043e-01, -3.06856917e-01, -7.48913780e-01,
        4.64749798e-01, -3.03563790e+00,  1.37432304e-01,
        3.19832493e+00,  5.06003106e-01,  8.84412186e-01,
        6.86988252e-01, -6.51458201e-01,  9.81831265e-01,
        1.66812629e-01, -4.04850569e-01),
      List(4.07038662e-01,  7.78262178e-01, -2.50717232e+00,
        2.34916755e+00, -5.33386192e-01, -5.59742652e-01,
        -2.94912579e+00, -8.77063830e-01,  5.45771204e-01,
        -4.93121915e-01, -7.97988194e-01,  1.36480654e+00,
        2.30341943e+00,  6.27988234e-01, -4.99923619e-01,
        -1.43115048e-01,  3.92223708e-01,  8.59911247e-01,
        -3.81507231e-01,  4.35189924e-01),
      List(3.36912335e-01, -2.90094298e-01, -2.60995113e-01,
        2.30585719e-01,  1.97313168e-02,  3.42858342e-01,
        4.54217582e-01,  1.53960425e-01,  6.82844314e-01,
        2.00977911e-01,  6.66772891e-01, -1.57421663e-01,
        -1.14226753e+00,  4.49590228e-01,  2.26258191e-01,
        7.29372290e-01,  3.37804316e-01, -7.01527935e-01,
        -9.98471229e-01, -6.18260114e-01),
      List(-2.42838813e-01, -5.08962640e-01, -6.98431203e-01,
        -7.12786004e-01,  9.86920926e-01, -7.14413434e-01,
        -3.48380067e-01,  2.41220550e-02, -9.13418124e-01,
        6.29238363e-01, -4.35721103e-01, -6.14887958e-01,
        -3.93308657e-01, -8.39878045e-01, -1.44669801e-01,
        3.14130849e-01,  6.43698750e-01, -2.10235475e-01,
        -5.44804523e-01, -7.63614741e-01),
      List(-6.23611480e-01,  8.22038479e-01, -2.61200149e-01,
        -8.33594727e-01,  6.68973028e-01, -8.11799451e-01,
        7.79654683e-01,  2.34922024e-01, -2.71185137e-02,
        -8.91772679e-01,  7.67511016e-01,  5.05851830e-01,
        -9.57248078e-01, -3.66074340e-02, -8.01118874e-01,
        1.62071315e-01,  2.56479194e-01, -7.68405781e-02,
        -7.09192732e-01,  6.73995564e-01),
      List(4.94009658e-01, -9.12931472e-01, -2.40582899e-03,
        -1.12049653e+00,  6.27603279e-01,  7.40383492e-01,
        6.65732252e-01, -1.35288810e-01, -5.21177912e-01,
        -7.38978657e-01,  1.10334236e+00, -8.28174707e-01,
        1.14280564e+00, -1.08654087e-01, -5.45663214e-01,
        -5.98545024e-01,  9.12603020e-01,  1.21897510e-01,
        -5.93132351e-01,  4.88271843e-01),
      List(-3.19241418e-01,  9.01506856e-01,  2.70476311e-01,
        2.82797623e+00,  8.35551459e-01, -5.26262593e-01,
        3.88750279e+00,  6.85399042e-01,  9.04947563e-01,
        6.84891620e-01, -7.98781563e-01,  1.78121426e+00,
        -6.65298513e+00,  3.62907894e-01,  3.84450084e-01,
        5.90932210e-02,  2.42222726e-01,  5.60727047e-01,
        7.92645114e-01,  1.81041095e-01),
      List(5.90602335e-01,  1.12813831e-01, -4.59740112e-02,
        -6.16648522e-01, -9.20542587e-01, -2.27991978e-01,
        -6.10419429e-02, -9.18818879e-02,  8.87785256e-01,
        2.36691739e-01, -5.45997670e-01,  8.35212695e-01,
        -4.13247443e-01, -1.02525482e-01, -6.12304465e-01,
        7.88864837e-01, -6.04334431e-01, -2.56121819e-02,
        7.46188757e-01, -5.14216850e-01),
      List(-2.41981216e-02, -2.47273567e-01, -8.02814788e+00,
        7.96468816e+00, -2.14216002e+00,  1.43084185e-01,
        -9.38767530e+00, -9.53552208e-01,  2.27868005e-01,
        6.25756210e-02, -6.76524210e+00,  1.72489544e+00,
        1.02499775e+01,  4.12355646e-01, -4.21234732e-01,
        -3.90012048e-01, -7.58938593e-02, -1.60012896e-01,
        4.00578875e-01,  2.46494290e-01),
      List(5.13388887e-02,  9.90104645e-01,  9.76849974e-01,
        -1.15406156e+00,  3.39386475e-01,  5.16039399e-02,
        -8.57376267e-01,  7.65932895e-01,  9.46974795e-01,
        -5.03418542e-01, -2.61796241e-02,  1.51469239e-01,
        1.22742936e-01,  3.78440267e-01, -4.89178945e-02,
        7.41891218e-01, -2.22503255e-01, -4.76000591e-01,
        -5.90046477e-02,  2.76710641e-01),
      List(-9.43018301e-01, -8.83274708e-01, -8.83371460e-01,
        -1.39326666e+00, -5.84364906e-01, -8.47952241e-01,
        -6.20280421e-01,  2.00862466e-01, -3.10277313e-01,
        -4.09842850e-01, -9.32595730e-01, -4.43980356e-01,
        -5.58160527e-01,  2.42463429e-01, -4.15771719e-01,
        8.17490546e-01,  8.24063677e-02,  8.21612278e-01,
        6.54272005e-01, -3.44861112e-01),
      List(2.88464040e-01,  3.34127195e-02, -1.81818336e-01,
        -9.66568822e-01,  8.74504124e-01,  7.48251871e-01,
        -9.25774671e-01,  6.46006081e-01,  7.95701435e-01,
        7.45372330e-01, -6.76304572e-01,  6.45156305e-01,
        1.75743013e-01,  2.37201485e-01, -1.77800774e-02,
        -3.40310875e-01, -2.39527008e-01, -9.55456977e-01,
        -8.34720583e-03, -8.65021314e-01),
      List(-2.98686995e-01, -9.37805849e-01, -2.37659305e+00,
        3.55030098e-01,  2.59929266e-01,  9.02271237e-01,
        1.67587695e+00,  9.07280683e-01, -1.30810053e-01,
        -1.56668130e-01,  6.94279898e+00,  2.34786076e+00,
        -9.90994519e+00, -6.77013539e-01, -7.04449988e-01,
        3.66148733e-01,  1.08565911e+00,  6.42243796e-01,
        -2.73022633e-01,  7.61077195e-01),
      List(-5.41589945e-01,  1.42351478e-01, -8.55975930e-01,
        -2.37837017e-01,  7.92982202e-02,  6.25014608e-01,
        3.40700064e-01, -8.98175233e-01, -5.28370726e-01,
        -8.71139489e-01,  2.04367308e-01, -3.58027251e-01,
        -3.89423401e-01,  5.21604913e-01, -5.29844727e-01,
        7.98441899e-01,  3.76085015e-02, -6.23063201e-01,
        -4.48793794e-01, -8.00865379e-02),
      List(-1.32233248e-01, -6.39062982e-01, -6.66077660e+00,
        -7.35766660e-01,  1.73215383e+00, -4.32396330e-01,
        -1.13300190e+01, -5.37663944e-01,  8.81655926e-01,
        7.93970139e-01,  1.86279119e+01, -5.77785080e-01,
        -3.27319507e+00,  5.79163909e-01, -4.70320945e+00,
        -8.48606236e-01, -5.93808205e-01,  3.71513798e-01,
        8.49481627e-01,  5.27745436e-01),
      List(-2.35065085e-01,  2.61918401e-01, -9.48493035e-01,
        -8.58163199e-01, -1.06729908e-01,  5.56935922e-02,
        5.35577955e-01, -8.73313113e-01,  3.68436102e-01,
        -5.93238334e-01, -3.08641573e-01,  4.42606688e-01,
        -5.11104001e-01,  8.08205972e-01, -6.02816994e-01,
        7.57175726e-01, -8.50851857e-01, -2.89581221e-01,
        -2.26021531e-01, -4.92222758e-01)))

    val weights3 = Matrix(List(
      List(9.43367417,   0.42238267,  -9.53605745,   0.19764178,
        -1.27702121,  -2.46838325,   0.18608793,   0.47922393,
        -0.89381481,   0.28879706,  -2.4032674 ,  -0.29270443,
        -7.60972696,   0.62781612,   0.90017049,   0.86640468,
        -0.55649134,   0.28671585,   0.09379145,   0.75944429),
      List( 7.41272865,  -5.17893971,  -3.7060312 ,   0.49331494,
        1.82173413,   1.40949225,   0.31479246,  -0.92479224,
        0.09810689,   0.19709866,  -5.25905889,  -0.49232224,
        5.97415799,   0.96120238,   0.53498018,  -0.6442705 ,
        -6.6659594 ,  -0.77750865,   2.65894313,   0.2639899 ),
      List( 2.05274794,   4.46494814,  -3.16569538,   0.08394212,
        0.09905513,  -2.53366569,  -0.16102206,   0.52945328,
        0.60198911,   0.59572043,   3.41121942,   0.82203595,
        -6.88264553,   0.95533107,  -0.36012784,   0.72013354,
        0.41923793,   0.51612332, -12.96004066,  -0.57874364),
      List( 0.12910775,  -1.71634471,   3.42680891,   0.40106615,
        2.59577189,   0.89235367,  -0.03740915,   0.03656316,
        0.29916611,   0.96227009,  -0.40792404,   0.45128509,
        6.11811131,  -0.30098588,  -0.78448185,   0.91478985,
        -5.58579519,   0.70389154, -10.66437246,  -0.30976817),
      List(-0.14269153,   1.62384028,  -3.56737629,   0.86111964,
        -2.80568729,  -0.80436078,   0.95305415,  -0.98936693,
        0.86289403,   0.77477552,   0.53885496,  -0.94814841,
        -6.01176554,   0.08620602,  -0.6733304 ,   0.91894121,
        5.80259763,   0.68849972,  10.48179879,  -0.68016242),
      List(-1.89330378,  -4.28641679,   2.83258178,   0.72523339,
        -1.45673577,   2.33142488,  -0.19917034,  -0.44559979,
        -0.85053711,   1.06745051,  -2.47109731,  -0.07695749,
        7.48447435,   0.25241628,   0.08230704,  -0.92427482,
        -0.71305515,   0.78101366,  13.03607656,  -0.11130369),
      List(-7.51174963,   5.47678299,   3.8818959 ,  -0.66511628,
        -1.82500857,  -1.39254783,   0.69434026,   0.06966447,
        -0.44638707,  -0.73751451,   4.18113339,  -0.43739745,
        -6.10466232,  -0.19882478,  -0.15147383,  -0.88483299,
        6.89319679,  -0.23631521,  -2.68594546,  -0.83245009),
      List(-9.25800307,   0.375857  ,   9.88733496,  -0.47372195,
        -0.21455314,   2.06167825,   0.28417104,   0.53592576,
        0.83847501,  -0.61829456,   1.64682375,  -0.94206763,
        7.83515607,  -0.46318427,   0.68771123,  -0.98840521,
        0.12347515,  -0.1123896 ,  -0.1075777 ,  -0.66936302)))

    val bias1 = Vector(List(-0.7504974, -0.05882424, 0.97253516, 1.78006474,
      -0.21631836, -0.69655026, -0.0456782, -0.01365551, -0.06266832,
      -0.14392506, 0.623511 ,  0.53478235, 0.3022066, -0.28443636, 0.01584716,
      -0.87052003, -0.22908775, -0.89401091, -0.60100891, -0.15449468))

    val bias2 = Vector(List(0.16638596, 0.06264272, 0.0363607, -0.74657323,
      0.08900102, -0.56274722, -0.74195066, 0.4834096, 0.23003145,
      -0.01586655, -0.77720727, 0.35675394, 0.40442839, -0.67024858,
      -1.58336664, -0.63003407, 0.55929917, 0.96517958, 0.97660176, -0.30526116))

    val bias3 = Vector(List(-1.11590125, 0.24247655, 0.29940624, 0.86274757,
      -0.71641541, -0.35124166, -1.36244747, 0.60168579))

    val layer1 = relu(weights1 * x + bias1)
    val layer2 = relu(weights2 * layer1 + bias2)
    val layer3 = linear(weights3 * layer2 + bias3)

    layer3

  } ensuring(res => res +/- 1e-3)
  // ensuring(res => res +/- 1e-5)
}
